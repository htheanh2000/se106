{"version":3,"sources":["../node_modules/typescript/lib sync","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","INIT_OBJECT","name","pre","post","parameter","result","type","INIT_INPUT","App","useState","input","setInput","output","setOutput","object","setObject","onClickChangeBtn","newInput","toLowerCase","getName","getParams","getResult","getPre","getPost","updateOutput","split","trim","open","indexOf","close","slice","map","item","splitArr","getType","value","preId","resultArr","postIndex","length","includes","conditions","string","index","element","replaceAll","thIndex","vmIndex","ttIndex","startIndex","indexName","substring","startValue","endValue","preIndex","key","outputStr","param","run","ts","transpile","runnalbe","eval","console","log","Run","onchange","property","newObject","f","kq","a","n","i","j","alert","className","rows","cols","placeholder","onChange","target","onClick","currentTarget","readOnly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.fdb842b6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 8;","\nimport './App.scss'\nimport { useState } from 'react'\nimport ts from \"typescript\";\n\n\n\ntype parseObject = {\n  name: string,\n  pre: string,\n  post: string,\n  parameter: parameter[],\n  result: result\n}\n\ntype parameter = {\n  name: string,\n  type: string,\n  value: any\n}\n\ntype result = {\n  name: string,\n  type: string,\n}\n\n\nconst INIT_OBJECT = {\n  name: '',\n  pre: '',\n  post: '',\n  parameter: [],\n  result: {\n    name: '',\n    type: ''\n  }\n}\nconst INIT_INPUT = ``\nfunction App() {\n  const [input, setInput] = useState<string>(INIT_INPUT)\n  const [output, setOutput] = useState<string>('')\n  const [object, setObject] = useState<parseObject>(INIT_OBJECT)\n\n  const onClickChangeBtn = () => {\n    // setOutput(input)\n    const newInput = input.toLowerCase()\n    const name = getName(newInput)\n    const parameter = getParams(newInput)\n    const result = getResult(newInput)\n    const pre = getPre(newInput)\n    const post = getPost(newInput)\n    setObject({ name, pre, post, parameter, result })\n    updateOutput(name, pre, post, parameter, result)\n  }\n\n  const getName = (input: string) => {\n    return input.split('(')[0].trim()\n  }\n\n  const getParams = (input: string) => {\n    const open = input.indexOf('(')\n    const close = input.indexOf(')')\n    const params = input.slice(open + 1, close).split(',').map(item => {\n      const splitArr = item.split(':')\n      return {\n        name: splitArr[0].trim(),\n        type: getType(splitArr[1] ? splitArr[1].trim() : ''),\n        value: ''\n      }\n    })\n    return params\n  }\n\n  const getResult = (input: string) => {\n    const close = input.indexOf(')')\n    const preId = input.indexOf('pre')\n    const resultArr = input.slice(close + 1, preId).split(':')\n    return {\n      name: resultArr[0].trim(),\n      type: getType(resultArr[1].trim()),\n    }\n  }\n\n  const getPost = (input: string) => {\n    const postIndex = input.indexOf('post') + 4\n    const post = input.slice(postIndex, input.length - 1).trim()\n    const result = post.split('=')[0]\n    if (post.includes('th')) { // Detect type is 2\n      const conditions = post.split('}.')\n      let string = ''\n      for (let index = conditions.length - 1; index >= 0; index--) {\n        let element = conditions[index].replaceAll(' ', '')\n\n        if (!element.includes('th')) // phep tinh toan \n        {\n          string += `\n            if (${element.replaceAll('(', '[').replaceAll(')', ']')}) {\n            //  ${result} = true;\n          }\n          else {\n            ${result} = false;\n          }\n          `\n\n        }\n        else {\n          const thIndex = element.indexOf('th')\n          const vmIndex = element.indexOf('vm')\n          const ttIndex = element.indexOf('tt')\n          const startIndex = vmIndex > ttIndex ? vmIndex : ttIndex\n          const indexName = element.substring(startIndex + 2, thIndex)\n          // console.log('element',element);\n          // console.log('startIndex',startIndex);\n          // console.log('thIndex', thIndex);\n          // console.log('indexName',indexName);\n\n          const startValue = element.substring(element.indexOf('{') + 1, element.indexOf('..'))\n          const endValue = element.substring(element.indexOf('..') + 2, element.length)\n          string = `\n          ${result} = true\n           for (let ${indexName} = ${startValue}; i <= ${endValue}  ; i++) { \n            ${string}\n           }`\n\n        }\n\n        // console.log(string);\n      }\n      return string\n    }\n\n    return post\n  }\n\n  const getPre = (input: string) => {\n    const preIndex = input.indexOf('pre') + 3\n    const postIndex = input.indexOf('post')\n    return input.slice(preIndex, postIndex).trim()\n  }\n\n  const getType = (key: string) => {\n    switch (key) {\n      case 'r':\n        return 'number';\n      case 'z':\n        return 'number';\n      case 'b':\n        return 'boolean';\n      default:\n        return 'any';\n    }\n  }\n\n  const updateOutput = (name: any, pre: any, post: any, parameter: any, result: any) => {\n    const outputStr = `({\n    Run: ({${parameter.map((param: any) => param.name)}} : {${parameter.map((param: any) => param.name + ':' + param.type)}}) => {\n        let ${result.name}: ${result.type}\n        if(${pre || 1}) {\n           ${post};\n          alert(${result.name})\n           return ${result.name};\n        }\n        else {\n          alert('Invalid parameter!')\n        }\n    }\n  })\n    `\n    setOutput(outputStr)\n  }\n\n\n  const run = () => {\n    let code: string = output\n    let result = ts.transpile(code);\n    let runnalbe: any = eval(result);\n    const input: any = {}\n    object.parameter.map(param => {\n      input[param.name] = param.value\n    })\n    console.log(input);\n\n    runnalbe.Run(input)\n  }\n\n  const onchange = (value: string, property: string) => {\n    const newObject = {\n      ...object,\n      parameter: object.parameter.map(param => {\n        return {\n          ...param,\n          value: param.name === property ? value : param.value\n        }\n      })\n    }\n    setObject(newObject)\n  }\n\n  const f = ({ a, n }: { a: any, n: any }) => {\n    let kq: boolean\n    if (1) {\n\n      kq = true\n      for (let i = 1; i <= n - 1; i++) {\n        kq = true\n        for (let j = i + 1; i <= n; i++) {\n          if (a[i] <= a[j]) {\n            //  kq  = true;\n          }\n          else {\n            kq = false;\n          }\n        }\n      };\n      alert(kq)\n      return kq;\n    }\n    else {\n      alert('Invalid parameter!')\n    }\n  }\n\n\n\n  // f( {\n  //   a: [1,2,3],\n  //   n: 2\n  // })\n\n  return (\n    <div className='App'>\n      <div className='input'>\n        <textarea className='textArea' value={input} rows={9} cols={50} placeholder='input' onChange={(e) => setInput(e.target.value)}></textarea>\n        <div className='control'>\n          <button className='control__btn' onClick={onClickChangeBtn}>Change</button>\n          {\n            object.parameter.map((param: any) =>\n              <input key={param.name} className='control__input' value={param.value} placeholder={'Type value ' + param.name} onChange={e => onchange(e.currentTarget.value, param.name)}></input>\n            )\n          }\n          <button className='control__btn' onClick={run}>Run</button>\n        </div>\n        <textarea className='textArea' value={output} rows={9} cols={50} placeholder='output' readOnly></textarea>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path='/' element={<App />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}